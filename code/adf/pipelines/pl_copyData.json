{
    "name": "pl_copyData",
    "properties": {
        "activities": [
            {
                "name": "getListOfFiles",
                "type": "GetMetadata",
                "dependsOn": [
                    {
                        "activity": "getSource",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "getDestination",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "ds_onpremfs_binary",
                        "type": "DatasetReference",
                        "parameters": {
                            "hostDirectory": {
                                "value": "@string(json(activity('getSource').output.Properties).hostDirectory)",
                                "type": "Expression"
                            },
                            "keyVaultName": {
                                "value": "@string(json(activity('getSource').output.Properties).keyVaultName)",
                                "type": "Expression"
                            },
                            "passwordSecretName": {
                                "value": "@string(json(activity('getSource').output.Properties).passwordSecretName)",
                                "type": "Expression"
                            },
                            "usernameSecretName": {
                                "value": "@string(json(activity('getSource').output.Properties).usernameSecretName)",
                                "type": "Expression"
                            },
                            "fileDirectory": {
                                "value": "@string(json(activity('getSource').output.Properties).fileDirectory)",
                                "type": "Expression"
                            },
                            "fileName": {
                                "value": "@''",
                                "type": "Expression"
                            }
                        }
                    },
                    "fieldList": [
                        "childItems"
                    ],
                    "storeSettings": {
                        "type": "FileServerReadSettings",
                        "enablePartitionDiscovery": false
                    },
                    "formatSettings": {
                        "type": "BinaryReadSettings"
                    }
                }
            },
            {
                "name": "loopThroughFiles",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "getListOfFiles",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('getListOfFiles').output.childItems",
                        "type": "Expression"
                    },
                    "isSequential": true,
                    "activities": [
                        {
                            "name": "copyToDest",
                            "type": "Copy",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "BinarySource",
                                    "storeSettings": {
                                        "type": "FileServerReadSettings",
                                        "recursive": true,
                                        "deleteFilesAfterCompletion": true
                                    },
                                    "formatSettings": {
                                        "type": "BinaryReadSettings"
                                    }
                                },
                                "sink": {
                                    "type": "BinarySink",
                                    "storeSettings": {
                                        "type": "AzureBlobFSWriteSettings"
                                    }
                                },
                                "enableStaging": false
                            },
                            "inputs": [
                                {
                                    "referenceName": "ds_onpremfs_binary",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "hostDirectory": {
                                            "value": "@string(json(activity('getSource').output.Properties).hostDirectory)",
                                            "type": "Expression"
                                        },
                                        "keyVaultName": {
                                            "value": "@string(json(activity('getSource').output.Properties).keyVaultName)",
                                            "type": "Expression"
                                        },
                                        "passwordSecretName": {
                                            "value": "@string(json(activity('getSource').output.Properties).passwordSecretName)",
                                            "type": "Expression"
                                        },
                                        "usernameSecretName": {
                                            "value": "@string(json(activity('getSource').output.Properties).usernameSecretName)",
                                            "type": "Expression"
                                        },
                                        "fileDirectory": {
                                            "value": "@string(json(activity('getSource').output.Properties).fileDirectory)",
                                            "type": "Expression"
                                        },
                                        "fileName": {
                                            "value": "@item().name",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "ds_datalake_binary",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "storageAccountName": {
                                            "value": "@string(json(activity('getDestination').output.Properties).storageAccountName)",
                                            "type": "Expression"
                                        },
                                        "container": {
                                            "value": "@string(json(activity('getDestination').output.Properties).container)",
                                            "type": "Expression"
                                        },
                                        "fileDirectory": {
                                            "value": "@string(json(activity('getDestination').output.Properties).fileDirectory)",
                                            "type": "Expression"
                                        },
                                        "fileName": {
                                            "value": "@item().name",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "name": "getSource",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat('https://',pipeline().globalParameters.metadataTableStorageName,'.table.core.windows.net/adfMetadata(PartitionKey=''',pipeline().parameters.metadataPartitionKey,''',RowKey=''',pipeline().parameters.metadataRowKey,''')?$select=Properties')",
                        "type": "Expression"
                    },
                    "method": "GET",
                    "headers": {
                        "Accept": "application/json;odata=nometadata",
                        "Content-Type": "application/xml",
                        "x-ms-version": "2019-07-07"
                    },
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://storage.azure.com/"
                    }
                }
            },
            {
                "name": "getDestination",
                "type": "WebActivity",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "url": {
                        "value": "@concat('https://',pipeline().globalParameters.metadataTableStorageName,'.table.core.windows.net/adfMetadata(PartitionKey=''',pipeline().parameters.destinationPartitionKey,''',RowKey=''',pipeline().parameters.destinationRowKey,''')?$select=Properties')",
                        "type": "Expression"
                    },
                    "method": "GET",
                    "headers": {
                        "Accept": "application/json;odata=nometadata",
                        "Content-Type": "application/xml",
                        "x-ms-version": "2019-07-07"
                    },
                    "authentication": {
                        "type": "MSI",
                        "resource": "https://storage.azure.com/"
                    }
                }
            }
        ],
        "parameters": {
            "metadataPartitionKey": {
                "type": "string",
                "defaultValue": "copyDataset"
            },
            "metadataRowKey": {
                "type": "string",
                "defaultValue": "OnPremTripData"
            },
            "destinationPartitionKey": {
                "type": "string",
                "defaultValue": "copyDataset"
            },
            "destinationRowKey": {
                "type": "string",
                "defaultValue": "adlsTripData"
            }
        },
        "variables": {
            "test": {
                "type": "String"
            }
        },
        "annotations": []
    }
}